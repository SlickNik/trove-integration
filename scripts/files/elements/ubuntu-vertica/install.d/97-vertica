#!/bin/sh
# CONTEXT: GUEST during CONSTRUCTION as ROOT - install.d
# PURPOSE: Install controller base required packages

set -e
set -o xtrace
export DEBIAN_FRONTEND=noninteractive

apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4AF64C61ED9FF8BD
apt-get install build-essential bc iptables curl sysstat pstack mcelog python-dev python-pip g++ unixODBC unixODBC-dev -y

dpkg -i /vertica_7.1.1-0_amd64.deb

# Creating dbadmin user
groupadd verticadba
useradd -g verticadba -d /home/dbadmin -s /bin/bash -m dbadmin

# Base Directory for database creation
mkdir /var/lib/vertica
chown dbadmin:verticadba /var/lib/vertica

# Adding keys to root and dbadmin user
mkdir -p ~root/.ssh
cp -p ~ubuntu/.ssh/id_rsa* ~root/.ssh
chown root:root ~root/.ssh/id_rsa*
mkdir ~dbadmin/.ssh
cp -p  ~ubuntu/.ssh/id_rsa* ~dbadmin/.ssh/
cp -p ~ubuntu/.ssh/authorized_keys ~dbadmin/.ssh/
chown -R dbadmin:verticadba ~dbadmin/.ssh

# Taking backup of /etc/hosts
cp -p /etc/hosts /etc/hosts.bkp

#check for directory existance
if [ ! -d '/opt/vertica/lib64' ]; then
    exit 'lib64 missing'
fi

#Adding vertica related config files in /etc
echo "[Driver]
DriverManagerEncoding=UTF-16
ODBCInstLib=/usr/lib/x86_64-linux-gnu/libodbcinst.so
ErrorMessagesPath=/opt/vertica/lib64
LogLevel=4
LogPath=/tmp" > vertica.ini
echo "[vertica]
Driver=/opt/vertica/lib64/libverticaodbc.so
Setup=/opt/vertica/lib64/libverticaodbc.so" > odbcinst.ini
install --backup --suffix=".default" odbcinst.ini /etc/
install --backup --suffix=".default" vertica.ini /etc/
